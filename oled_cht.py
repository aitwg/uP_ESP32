# CHT font oled sample
# 2020/05/14
from machine import Pin, I2C
import ssdoled
import framebuf
from time import sleep

# ESP32 Pin assignment 
i2c = I2C(-1, scl=Pin(22), sda=Pin(21))

oled_width = 128
oled_height = 64
oled = ssdoled.SSD1306_I2C(oled_width, oled_height, i2c)

myFont = [
0x00, 0x20, 0x00, 0x00, 0x30, 0x00, 0x00, 0x38, 0x00, 0x00, 0x70, 0x00, 0x00, 0x60, 0x00, 0x00, 
0xc0, 0x00, 0x01, 0x83, 0x80, 0x01, 0x01, 0xc0, 0x03, 0x01, 0xe0, 0x06, 0x3f, 0xe0, 0x1f, 0xe0, 
0x60, 0x3e, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x3f, 0x80, 0x0f, 0xf3, 0xc0, 
0x06, 0x03, 0x80, 0x06, 0x03, 0x80, 0x02, 0x03, 0x00, 0x02, 0x06, 0x00, 0x03, 0x1f, 0x00, 0x03, 
0xff, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x30, 0x01, 0x82, 
0x20, 0x19, 0x87, 0x6c, 0x1d, 0x70, 0x58, 0x0a, 0x66, 0xf0, 0x07, 0x80, 0x28, 0x01, 0x8e, 0x7c, 
0x71, 0xe3, 0xc0, 0x3b, 0x0f, 0x16, 0x10, 0x6b, 0x56, 0x06, 0xa8, 0x40, 0x02, 0x83, 0xc0, 0x02, 
0x78, 0x80, 0x0c, 0x01, 0x80, 0x08, 0x7f, 0x80, 0x18, 0x60, 0x00, 0x30, 0x47, 0xc0, 0x70, 0xf0, 
0xe0, 0x70, 0xc0, 0xc0, 0x60, 0x00, 0xc0, 0x20, 0x00, 0xc0, 0x00, 0x07, 0xc0, 0x00, 0x03, 0x80, 
0x00, 0x00, 0xc0, 0x00, 0x80, 0xe0, 0x00, 0xe0, 0xe0, 0x03, 0xe0, 0xc0, 0x07, 0x00, 0xc0, 0x1b, 
0x0e, 0xc0, 0x01, 0x06, 0xc0, 0x01, 0x60, 0xc0, 0x03, 0xec, 0xc0, 0x7f, 0x0e, 0xc0, 0xf3, 0xe2, 
0xc0, 0x07, 0x60, 0xc7, 0x07, 0x01, 0xff, 0x0d, 0x0f, 0xc0, 0x19, 0x38, 0xc0, 0x31, 0x00, 0xc0, 
0x61, 0x00, 0xc0, 0x83, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03, 
0x00, 0x80, 0x00, 0x00, 0x80, 0x00, 0x00, 0x80, 0x00, 0x40, 0x00, 0x00, 0x70, 0x00, 0x00, 0x30, 
0x00, 0x00, 0x13, 0xc0, 0x00, 0xff, 0xe0, 0x1f, 0xe0, 0x00, 0x00, 0x0c, 0x00, 0x03, 0xfe, 0x00, 
0x01, 0x8c, 0x00, 0x01, 0x9c, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0xf0, 0x01, 0xff, 0xf8, 0x3f, 
0x80, 0x78, 0x30, 0x00, 0x38, 0x30, 0x3c, 0x30, 0x33, 0xfe, 0x30, 0x31, 0x0c, 0x30, 0x31, 0x18, 
0x30, 0x31, 0xfc, 0x30, 0x31, 0x80, 0x70, 0x30, 0x03, 0xf0, 0x20, 0x01, 0xe0, 0x00, 0x00, 0xe0, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x03, 0xe0, 0x0e, 0xfe, 0x70, 0x0e, 
0x66, 0x70, 0x02, 0x64, 0x60, 0x00, 0x6f, 0x60, 0x00, 0x6b, 0x60, 0x70, 0x30, 0x40, 0x38, 0x3f, 
0xc0, 0x18, 0x20, 0x00, 0x02, 0x00, 0x00, 0x04, 0x1f, 0xf0, 0x04, 0xf1, 0x38, 0x0c, 0xd9, 0x38, 
0x18, 0xd9, 0x30, 0x18, 0x5b, 0x30, 0x30, 0x5a, 0x20, 0x70, 0x4a, 0x7c, 0x37, 0xff, 0xff, 0x33, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x18, 0x00, 0x00, 0x09, 
0xc0, 0x00, 0x1f, 0xc0, 0x0f, 0xfc, 0x00, 0x0e, 0x07, 0x00, 0x0c, 0xc3, 0x00, 0x0c, 0x63, 0xe0, 
0x0c, 0x7f, 0x00, 0x0f, 0xe6, 0x00, 0x0c, 0x66, 0x00, 0x0c, 0x7e, 0x00, 0x0c, 0x60, 0x00, 0x08, 
0x0f, 0x00, 0x18, 0xff, 0x00, 0x18, 0x06, 0x00, 0x10, 0xec, 0x00, 0x30, 0x3c, 0x00, 0x20, 0x1c, 
0x00, 0x60, 0x7e, 0x00, 0xc1, 0xe3, 0xc0, 0x8f, 0x81, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x1c, 0x7f, 0xf0, 0x0e, 0x70, 0x70, 0x06, 
0x37, 0x60, 0x00, 0x38, 0x60, 0x00, 0x31, 0xc0, 0x60, 0x1e, 0xc0, 0x38, 0x70, 0xc0, 0x18, 0x68, 
0xd8, 0x00, 0xdd, 0xb8, 0x01, 0x9b, 0xe0, 0x05, 0xf3, 0x40, 0x09, 0x60, 0xd0, 0x08, 0xd9, 0xb8, 
0x19, 0xff, 0xd8, 0x31, 0x83, 0x00, 0x70, 0x00, 0x10, 0x71, 0x19, 0x9c, 0x63, 0x19, 0x8c, 0x23, 
0x08, 0x8e, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x18, 0x00, 0x00, 0x09, 
0xc0, 0x00, 0x1f, 0xc0, 0x0f, 0xfc, 0x00, 0x0e, 0x07, 0x00, 0x0c, 0xc3, 0x00, 0x0c, 0x63, 0xe0, 
0x0c, 0x7f, 0x00, 0x0f, 0xe6, 0x00, 0x0c, 0x66, 0x00, 0x0c, 0x7e, 0x00, 0x0c, 0x60, 0x00, 0x08, 
0x0f, 0x00, 0x18, 0xff, 0x00, 0x18, 0x06, 0x00, 0x10, 0xec, 0x00, 0x30, 0x3c, 0x00, 0x20, 0x1c, 
0x00, 0x60, 0x7e, 0x00, 0xc1, 0xe3, 0xc0, 0x8f, 0x81, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]

# use sublist go generate bytearray for font.
Buf_1 = bytearray(myFont[0:72])
Buf_2 = bytearray(myFont[72:144])
Buf_3 = bytearray(myFont[144:216])
Buf_4 = bytearray(myFont[216:288])
Buf_5 = bytearray(myFont[288:360])
Buf_6 = bytearray(myFont[360:432])
Buf_7 = bytearray(myFont[432:504])
Buf_8 = bytearray(myFont[504:576])
fb1 = framebuf.FrameBuffer(Buf_1,24,24, framebuf.MONO_HLSB)
fb2 = framebuf.FrameBuffer(Buf_2,24,24, framebuf.MONO_HLSB)
fb3 = framebuf.FrameBuffer(Buf_3,24,24, framebuf.MONO_HLSB)
fb4 = framebuf.FrameBuffer(Buf_4,24,24, framebuf.MONO_HLSB)
fb5 = framebuf.FrameBuffer(Buf_5,24,24, framebuf.MONO_HLSB)
fb6 = framebuf.FrameBuffer(Buf_6,24,24, framebuf.MONO_HLSB)
fb7 = framebuf.FrameBuffer(Buf_7,24,24, framebuf.MONO_HLSB)
fb8 = framebuf.FrameBuffer(Buf_8,24,24, framebuf.MONO_HLSB)

while True:
    oled.fill(0)
    oled.blit(fb1, 0, 0)
    oled.blit(fb2, 24, 0)
    oled.blit(fb3, 48, 0)
    oled.blit(fb4, 72, 0)

    oled.blit(fb5, 0, 36)
    oled.blit(fb6, 24,36)

    oled.blit(fb7, 48,36)
    oled.blit(fb8, 72,36)
    oled.show()
    sleep(3)